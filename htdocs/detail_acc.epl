<HTML>
[- 
	use DBI;
	use Time::Format qw( time_format );

	use lib qw( /var/www/lib/perl );
	#use lib qw( /opt/local/apache2/perl );
	use Nabovarme::Db;
	use Nabovarme::Admin;

	$admin = new Nabovarme::Admin;
	$is_admin = $admin->cookie_is_admin($req_rec, $fdat{'serial'});

	if ($is_admin && ($fdat{add_state} =~ /add/i)) {
		$admin->add_payment($fdat{serial}, $fdat{type}, $fdat{unix_time}, $fdat{info}, $fdat{amount}, $fdat{price});
		$http_headers_out{'Location'} = "detail_acc.epl?serial=" . $fdat{serial};
	}

	if ($dbh = Nabovarme::Db->my_connect) {
		my $quoted_serial = $dbh->quote($fdat{'serial'});
		$sth = $dbh->prepare(qq[SELECT `info` FROM meters WHERE `serial` like $quoted_serial]);
		$sth->execute;

		$sth2 = $dbh->prepare(qq[SELECT hours, volume, energy FROM samples_cache WHERE serial LIKE $quoted_serial ORDER BY `unix_time` DESC LIMIT 1]);
		$sth2->execute;

		# get kWh left
		$sth3 = $dbh->prepare(qq[SELECT ROUND( \
			(SELECT SUM(amount/price) AS paid_kwh FROM accounts WHERE serial = $quoted_serial) - \
			(SELECT \
				(SELECT samples_cache.energy FROM samples_cache WHERE samples_cache.serial = $quoted_serial ORDER BY samples_cache.unix_time DESC LIMIT 1) - \
				(SELECT meters.setup_value FROM meters WHERE meters.serial = $quoted_serial) AS consumed_kwh \
			), 2) AS kwh_left]);
		$sth3->execute;

		# get list of payments
		$sth4 = $dbh->prepare(qq[SELECT DATE_FORMAT(FROM_UNIXTIME(payment_time), "%d.%m.%Y %T") AS date_string, type, info, amount, price \
			FROM accounts WHERE serial = $quoted_serial ORDER BY payment_time ASC]);
		$sth4->execute;

		# get last days energy usage
		$sth5 = $dbh->prepare(qq[SELECT `energy`, `unix_time` FROM nabovarme.samples_cache \
			WHERE `serial` = $quoted_serial ORDER BY unix_time DESC LIMIT 1]);
		$sth5->execute;
		if ($sth5->rows) {
			if ($d = $sth5->fetchrow_hashref) {
				$energy_now = $d->{energy};
				$time_now = $d->{unix_time};
			}
		}
		$sth5 = $dbh->prepare(qq[SELECT `energy`, `unix_time` FROM nabovarme.samples_cache \
			WHERE `serial` = $quoted_serial \
			AND (from_unixtime(unix_time) < (FROM_UNIXTIME($d->{unix_time}) - INTERVAL 24 HOUR)) ORDER BY unix_time DESC LIMIT 1]);
		$sth5->execute;
		if ($sth5->rows) {
			if ($d = $sth5->fetchrow_hashref) {
				$energy_last = $d->{energy};
				$time_last = $d->{unix_time};
			}
		}
		if (($time_now - $time_last) > 0) {
			$energy_last_day = ($energy_now - $energy_last) / (($time_now - $time_last) / 60 / 60);
		}
	}

	if ($sth->rows) {
		if ($d = $sth->fetchrow_hashref) {
			$info = $d->{info};
		}
	}
-] 
	<HEAD>
		<meta name="robots" content="noindex">
		<meta name="viewport" content="width=device-width, initial-scale=1.0">
		<TITLE>[+ $info +] MeterLogger</TITLE>
		<script type="text/javascript">
			var meter_serial = "[+ $fdat{'serial'} +]"
		</script>

		<!-- style and js for burger menu -->
		<link rel="stylesheet" href="/menu.css">
		<script src="/js/menu.js" defer></script>	

		<script src="dygraphs/dygraph-dev.js"></script>
		<style type="text/css">
			/* Graph container fills width with no margin/padding */
			#spinner {
				width: 100%;
				height: 400px;
				position: relative;
				margin: 0;
				padding: 0;
			}
			#div_nabovarme {
				width: 100%;
				height: 400px;
				position: absolute;
				top: 0;
				left: 0;
				margin-right: 120px;
			}
			/* Align Y-axis labels right, near graph */
			.dygraph-axis-label.ylabel {
				text-align: right !important;
				padding-right: 4px;
			}

			.dygraph-legend,
			.dygraph-label {
				font-family: Verdana, Geneva, sans-serif;
				text-align: left;
				background: none;
			}
			.dygraph-axis-label {
				font-family: Verdana, Geneva, sans-serif;
			}
			.highlight {
				font-weight: bold;
			}
			.default {
				font-family: Verdana, Geneva, sans-serif;
			}
			.default-small {
				font-family: Verdana, Geneva, sans-serif;
				font-size: 50%;
			}
			.default-bold {
				font-family: Verdana, Geneva, sans-serif;
				font-weight: bold;
			}
			.default-highlight {
				font-family: Verdana, Geneva, sans-serif;
				background-color:#FFFF00;
			}
			/* Scale checkboxes for mobile */
			input[type="checkbox"] {
				transform: scale(1.5);
				-ms-transform: scale(1.5);
				-webkit-transform: scale(1.5);
				transform-origin: 0 0;
				margin-right: 6px;
				vertical-align: middle;
			}

			td input {
				width: 100%;
				box-sizing: border-box;
			}

			@media (max-width: 600px) {
				#spinner, #div_nabovarme {
					height: 300px;
				}
				input[type="checkbox"] {
					transform: scale(2);
				}
			}
		</style>
		[$ if ($is_admin) $]
			<style type="text/css">
				td input {
					width: 100%;
					box-sizing: border-box;
				}
			</style>
		[$ endif $]
	</HEAD>
	<BODY>
		<span class="default-bold">
			[+ $info +]
		</span>
		<span class="default">
			<a href="detail.epl?serial=[+ $fdat{'serial'} +]">Details</a>
		</span>
		<span class="default-small">
			<a href="/qr/[+ $fdat{'serial'} +]">QR</a>
			[$ if ($is_admin) $] <a href="update_wifi.epl?serial=[+ $fdat{'serial'} +]">Update wifi</a>[$ endif $]
		</span>
		<br>
		<span class="default">
			serial [+ $fdat{'serial'} +]<br>
			<div id="last_energy">
			[$ if ($sth2->rows) $]
				[$ if ($d = $sth2->fetchrow_hashref) $]
					[+ $d->{energy} +] kWh<br>
					[+ $d->{volume} +] m<sup>3</sup><br>
					[+ $d->{hours} +] hours<br>
				[$ endif $]
			[$ endif $]
			</div>
		</span>
		<div id="spinner">
			<div id="div_nabovarme"></div>
		</div>
		<br>
		<table border="0" align="left" cellpadding="0" cellspacing="6" width="100%">
			<tr align="left" valign="bottom">
				<td>&nbsp;</td>
				<td>&nbsp;</td>
				<td colspan="6" align="left"><div id="consumption_in_range">&nbsp;</div></td>
			</tr>
			<tr align="left" valign="bottom">
				<td>&nbsp;</td>
				<td>&nbsp;</td>
				<td>&nbsp;</td>
				<td>&nbsp;</td>
				<td>&nbsp;</td>
				<td>&nbsp;</td>
				<td>&nbsp;</td>
				<td>&nbsp;</td>
			</tr>
			<tr align="left" valign="bottom">
				<td align="left"><span class="default-bold">Date</span></td>
				<td>&nbsp;</td>
				<td align="left" colspan="2"><span class="default-bold">Info</span></td>
				<td>&nbsp;</td>
				<td align="right"><span class="default-bold">Amount</span></td>
				<td>&nbsp;</td>
				<td align="left"><span class="default-bold">Price</span></td>
			</tr>
		
			[$ if ($sth4->rows) $]
			[$ while ($d = $sth4->fetchrow_hashref) $]
				<tr align="left" valign="bottom">
					<td align="left"><span class="default">[+ $d->{date_string} +]</span></td>
					<td>&nbsp;</td>
					<td align="left" colspan="2"><span class="default">[$ if $d->{type} eq 'payment' $][+ sprintf("%.0f", ($d->{amount} / $d->{price})) . " kWh" +] [$ endif $][+ $d->{info} +] </span></td>
					<td>&nbsp;</td>
					<td align="right"><span class="default">[+ Nabovarme::Admin::normalize_amount($d->{amount} || 0) +] kr</span></td>
					<td>&nbsp;</td>
					<td align="left"><span class="default">[$ if $d->{type} eq 'payment' $][+ Nabovarme::Admin::normalize_amount($d->{price} || 0) +] kr/kWh[$ endif $]</span></td>
				</tr>
			[$ endwhile $]
			[$ endif $]
			[$ if ($is_admin) $]
				[$ if ($fdat{add_state} =~ /preview/i) $]
					<form method="GET" action="">
						<tr align="left" valign="bottom">
							<td><span class="default-highlight">[+ time_format('dd.mm.yyyy hh:mm:ss', time()) +]</span></td>
							<td>&nbsp;</td>
							<td colspan="2"><span class="default-highlight">[$ if $fdat{type} eq 'payment' $][+ sprintf("%.0f", (Nabovarme::Admin::normalize_amount($fdat{amount}) / Nabovarme::Admin::normalize_amount($fdat{price}))) . " kWh" +] [$ endif $][+ $fdat{info} +]</span></td>
							<td>&nbsp;</td>
							<td align="right"><span class="default-highlight">[+ Nabovarme::Admin::normalize_amount($fdat{amount}) +] kr</span></td>
							<td>&nbsp;</td>
							<td><span class="default-highlight">[$ if $fdat{type} eq 'payment' $][+ Nabovarme::Admin::normalize_amount($fdat{price}) +] kr/kWh[$ endif $]</span></td>
						</tr>
						<tr align="left" valign="bottom">
							<td>&nbsp;</td>
							<td>&nbsp;</td>
							<td>
								<input type="hidden" name="serial" value="[+ $fdat{serial} +]">
								<input type="hidden" name="type" value="[+ $fdat{type} +]">
								<input type="hidden" name="low" value="[+ $fdat{low} +]">
								<input type="hidden" name="unix_time" value="[+ time() +]">
								<input type="hidden" name="info" value="[+ $fdat{info} +]">
								<input type="hidden" name="amount" value="[+ $fdat{amount} +]">
								<input type="hidden" name="price" value="[+ $fdat{price} +]">
								<input type="hidden" name="add_state" value="add">
								<input type="submit" name="add" value="Add" style="width: 100px;">
							</td>
							<td>&nbsp;</td>
							<td>&nbsp;</td>
							<td>&nbsp;</td>
							<td>&nbsp;</td>
							<td>&nbsp;</td>
							<td>&nbsp;</td>
						</tr>
					</form>
				[$ else $]
					<form method="GET" action="">
						<tr align="left" valign="bottom">
							<td>&nbsp;</td>
							<td>&nbsp;</td>
							<td>
								<select name="type">
									<option value="payment">Payment</option>
									<option value="membership">Membership</option>
									<option value="charge">Charge</option>
								</select>
							</td>
							<td><span class="default"><input type="text" inputmode="text" name="info" value="" size="32"></span></td>
							<td>&nbsp;</td>
							<td align="right"><span class="default"><input type="text" inputmode="text" name="amount" value="" size="5"></span></td>
							<td>&nbsp;</td>
							<td><span class="default"><input type="text" inputmode="text" name="price" value="[+ sprintf(qq[%.2f], $admin->default_price_for_serial($fdat{serial})) +]" size="3"></span>
							</td>
							<td>&nbsp;</td>
							<td><input type="submit" name="add" value="Preview" style="width: 100px;"></td>
						</tr>
					</form>
				[$ endif $]
			[$ endif $]
		</table>
		
		<script src="detail_acc.js"></script>
	</BODY>
</HTML>
