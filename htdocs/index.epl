[-
	use DBI;
	use Net::MQTT::Simple "loppen.christiania.org";
	          
	use lib qw( /var/www/lib/perl );
	use lib qw( /opt/local/apache2/perl );
	use Config;
	use Nabovarme::Db;
	
#	my $mqtt;
#	if ($Config{osname} =~ /darwin/) {
#		$mqtt = Net::MQTT::Simple->new(q[10.8.0.84]);
#	}
#	else {
#		$mqtt = Net::MQTT::Simple->new(q[127.0.0.1]);
#	}
-]
<HTML>
	<HEAD>
	<meta name="robots" content="noindex">
<!--	<meta http-equiv="refresh" content="60">	-->
	<TITLE>MeterLogger</TITLE>
	<script src="dygraphs/dygraph-dev.js"></script>
	<style type="text/css">
	.top {
		position: absolute;
		top: 0;
		left: 0;
	}
	.default {
		font-family: Verdana, Geneva, sans-serif;
	}
	.default-bold {
		font-family: Verdana, Geneva, sans-serif;
		font-weight: bold;
	}
	.default-group {
		font-family: Verdana, Geneva, sans-serif;
		font-weight: bold;
		font-size: 120%;
	}
	</style>
	</HEAD>
	<BODY>
    [- 
	# get all meters
          if ($dbh = Nabovarme::Db->my_connect) {
			$sth = $dbh->prepare(qq[SELECT meter_groups.`group` as `group`, meters.`type`, meters.`serial`, meters.`last_updated`, meters.`info` FROM meters, meter_groups where meters.`group` = meter_groups.`id` ORDER BY meters.`group`, meters.`info`, meters.`serial`]);
			$sth->execute;			
		  }
	$last_group = '';
	$is_first = 1;

          -]
    <!-- <span class="default-bold">Meters</span> -->
	<table border="0" align="left" cellpadding="0" cellspacing="6" class="top">
[$ if ($sth->rows) $]
[$ while ($d = $sth->fetchrow_hashref) $]
[- 
	# get details about every meter
	my $quoted_serial = $dbh->quote($d->{serial});
	$sth2 = $dbh->prepare(qq[SELECT hours, volume, energy FROM samples_cache WHERE serial = $quoted_serial ORDER BY `unix_time` DESC LIMIT 1]);
	$sth2->execute;
	$d2 = $sth2->fetchrow_hashref;

	$sth3 = $dbh->prepare(qq[SELECT ROUND( \
	(SELECT SUM(amount/price) AS paid_kwh FROM accounts WHERE serial = $quoted_serial) - \
	(SELECT \
		(SELECT samples_cache.energy FROM samples_cache WHERE samples_cache.serial = $quoted_serial ORDER BY samples_cache.unix_time DESC LIMIT 1) - \
		(SELECT meters.setup_value FROM meters WHERE meters.serial = $quoted_serial) AS consumed_kwh \
	), 2) AS kwh_left]);
	$sth3->execute;

	# get last days energy usage
	$sth4 = $dbh->prepare(qq[SELECT `energy`, `unix_time` FROM nabovarme.samples_cache \
		WHERE `serial` = $quoted_serial ORDER BY unix_time DESC LIMIT 1]);
	$sth4->execute;
	if ($sth4->rows) {
		if ($d4 = $sth4->fetchrow_hashref) {
			$energy_now = $d4->{energy};
			$time_now = $d4->{unix_time};
		}
	}
	$sth5 = $dbh->prepare(qq[SELECT `energy`, `unix_time` FROM nabovarme.samples_cache \
		WHERE `serial` = $quoted_serial \
		AND (from_unixtime(unix_time) < (FROM_UNIXTIME($d4->{unix_time}) - INTERVAL 24 HOUR)) ORDER BY unix_time DESC LIMIT 1]);
	$sth5->execute;
	if ($sth5->rows) {
		if ($d5 = $sth5->fetchrow_hashref) {
			$energy_last = $d5->{energy};
			$time_last = $d5->{unix_time};
		}
	}
	if (($time_now - $time_last) > 0) {
		$energy_last_day = ($energy_now - $energy_last) / (($time_now - $time_last) / 60 / 60);
	}

	$d3 = $sth3->fetchrow_hashref;


	# same for flow meters
	$sth3_volume = $dbh->prepare(qq[SELECT ROUND( \
	(SELECT SUM(amount/price) AS paid_m3 FROM accounts WHERE serial = $quoted_serial) - \
	(SELECT \
		(SELECT samples_cache.volume FROM samples_cache WHERE samples_cache.serial = $quoted_serial ORDER BY samples_cache.unix_time DESC LIMIT 1) - \
		(SELECT meters.setup_value FROM meters WHERE meters.serial = $quoted_serial) AS consumed_m3 \
	), 2) AS m3_left]);
	$sth3_volume->execute;

	# get last days energy usage
	$sth4_volume = $dbh->prepare(qq[SELECT `volume`, `unix_time` FROM nabovarme.samples_cache \
		WHERE `serial` = $quoted_serial ORDER BY unix_time DESC LIMIT 1]);
	$sth4_volume->execute;
	if ($sth4_volume->rows) {
		if ($d4_volume = $sth4_volume->fetchrow_hashref) {
			$volume_now = $d4_volume->{volume};
			$time_now_volume = $d4_volume->{unix_time};
		}
	}
	$sth5_volume = $dbh->prepare(qq[SELECT `volume`, `unix_time` FROM nabovarme.samples_cache \
		WHERE `serial` = $quoted_serial \
		AND (from_unixtime(unix_time) < (FROM_UNIXTIME($d4_volume->{unix_time}) - INTERVAL 24 HOUR)) ORDER BY unix_time DESC LIMIT 1]);
	$sth5_volume->execute;
	if ($sth5_volume->rows) {
		if ($d5_volume = $sth5_volume->fetchrow_hashref) {
			$volume_last = $d5_volume->{volume};
			$time_last_volume = $d5_volume->{unix_time};
		}
	}
	if (($time_now_volume - $time_last_volume) > 0) {
		$volume_last_day = ($volume_now - $volume_last) / (($time_now_volume - $time_last_volume) / 60 / 60);
	}

	$d3_volume = $sth3_volume->fetchrow_hashref;


-]
[-	use utf8;
	if ($energy_last_day > 0) {
		$energy_time_left = $d3->{kwh_left} / $energy_last_day;
		if ($energy_time_left > 24) {
			if (sprintf("%.0f", $energy_time_left / 24) == 1) {
				$energy_time_left_str = sprintf("%.0f", $energy_time_left / 24) . " day";
			}
			else {
				$energy_time_left_str = sprintf("%.0f", $energy_time_left / 24) . " days";
			}
		}
		else {
			if (sprintf("%.0f", $energy_time_left) == 1) {
				$energy_time_left_str = sprintf("%.0f", $energy_time_left) . " hour";
			}
			else {
				$energy_time_left_str = sprintf("%.0f", $energy_time_left) . " hours";
			}
		}
	}
	else {
		$energy_time_left_str = '∞';
	}

	# same for impulse meters
	if ($volume_last_day > 0) {
		$volume_time_left = $d3_volume->{m3_left} / $volume_last_day;
		if ($volume_time_left > 24) {
			if (sprintf("%.0f", $volume_time_left / 24) == 1) {
				$volume_time_left_str = sprintf("%.0f", $volume_time_left / 24) . " day";
			}
			else {
				$volume_time_left_str = sprintf("%.0f", $volume_time_left / 24) . " days";
			}
		}
		else {
			if (sprintf("%.0f", $volume_time_left) == 1) {
				$volume_time_left_str = sprintf("%.0f", $volume_time_left) . " hour";
			}
			else {
				$volume_time_left_str = sprintf("%.0f", $volume_time_left) . " hours";
			}
		}
	}
	else {
		$volume_time_left_str = '∞';
	}
-]
[$ if (($last_group ne $d->{'group'}) and ($is_first == 0)) $]
	<tr>
		<td></td>
		<td>&nbsp;</td>
		<td></td>
		<td>&nbsp;</td>
		<td></td>
		<td>&nbsp;</td>
		<td></td>
		<td>&nbsp;</td>
		<td></td>
		<td>&nbsp;</td>
		<td></td>
		<td>&nbsp;</td>
		<td></td>
	</tr>
[$ endif $]
[- $is_first = 0; -]
[$ if ($last_group ne $d->{'group'}) $]
	<tr>
		<td align="left" colspan=13><span class="default-group">[+ $d->{'group'} +]</span></td>
	</tr>
	<tr align="left" valign="bottom">
		<td align="left"><span class="default-bold">Serial</span></td>
		<td align="left"><span class="default-bold">Info</span></td>
		<td align="right"><span class="default-bold">Energy</span></td>
		<td>&nbsp;</td>
		<td align="right"><span class="default-bold">Volume</span></td>
		<td>&nbsp;</td>
		<td align="right"><span class="default-bold">Hours</span></td>
		<td>&nbsp;</td>
		<td align="right"><span class="default-bold">left</span></td>
		<td>&nbsp;</td>
		<td align="right"><span class="default-bold">time left</span></td>
		<td>&nbsp;</td>
		<td align="left"><span class="default-bold"></span></td>
	</tr>
[$ endif $]
	<tr align="left" valign="bottom">
		<td align="left"><span class="default"><a href="[$ if ($d->{type} =~ /^water$/i) $]detail_volume_acc.epl[$ else $]detail_acc.epl[$ endif $]?serial=[+ $d->{serial} +]&low=1">[+ $d->{serial} +]</a></span></td>
		<td align="left"><span class="default">[+ $d->{info} +]</span></td>
		<td align="right"><span class="default">[$ if (!$d->{type} =~ /^water$/i) $][$ else $][+ $d2->{energy} +] kWh[$ endif $]</span></td>
		<td>&nbsp;</td>
		<td align="right"><span class="default">[+ $d2->{volume} +] [$ if $d2->{volume} $] m<sup>3</sup>[$ endif $]</span></td>
		<td>&nbsp;</td>
		<td align="right"><span class="default">[+ $d2->{hours} +] [$ if $d2->{hours} $] h[$ endif $]</span></td>
		<td>&nbsp;</td>
		<td align="right"><span class="default">[$ if ($d->{type} =~ /^water$/i) $][+ sprintf("%.0f", $d3_volume->{m3_left}) || "0" +] m<sup>3</sup>[$ else $][+ sprintf("%.0f", $d3->{kwh_left}) || "0" +] kWh[$ endif $]</span></td>
		<td>&nbsp;</td>
		<td align="right"><span class="default">[$ if ($d->{type} =~ /^water$/i) $][+ $volume_time_left_str +][$ else $][+ $energy_time_left_str +][$ endif $]</lefts></td>
		<td>&nbsp;</td>
		<td align="left"><span class="default"></span>[+ ((time() - $d->{last_updated}) < 86400) ? "" : "!" +]</td>
[-
#		<td align="left"><span class="default"><!-- <a href="detail.epl?serial=[+ $d->{serial} +]&low=0">details</a> | <a href="./?serial=[+ $d->{serial} +]&open=1">open</a> | <a href="./?serial=[+ $d->{serial} +]&close=1">close</a> | <a href="./?serial=[+ $d->{serial} +]&test=1">test</a> | <a href="./?serial=[+ $d->{serial} +]&off=1">off</a></--></span></td>
-]
	</tr>

[-        $last_group = $d->{'group'};  -]
[$ endwhile $]
[$ endif $]
	</table>
	</BODY>
</HTML>
