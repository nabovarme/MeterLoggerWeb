[-
	use DBI;
	use Net::MQTT::Simple "loppen.christiania.org";
	          
	use lib qw( /var/www/lib/perl );
	use lib qw( /opt/local/apache2/perl );
	use Config;
	use Nabovarme::Db;
	
#	my $mqtt;
#	if ($Config{osname} =~ /darwin/) {
#		$mqtt = Net::MQTT::Simple->new(q[10.8.0.84]);
#	}
#	else {
#		$mqtt = Net::MQTT::Simple->new(q[127.0.0.1]);
#	}

	$dbh = Nabovarme::Db->my_connect || die $!;
-]
<HTML>
	<HEAD>
	<TITLE>MeterLogger Map</TITLE>
	<meta name="robots" content="noindex">
	<meta name="viewport" content="width=device-width, initial-scale=1.0, maximum-scale=1.0, user-scalable=no" />
	

	<link rel="stylesheet" href="leaflet/leaflet.css" />
	<script src="leaflet/leaflet.js"></script>
	<style>
	#map {
		height: 100%;
		width: 100%;
	}
	</style>

	<link rel="stylesheet" href="https://netdna.bootstrapcdn.com/font-awesome/4.0.0/css/font-awesome.css" crossorigin="anonymous">
	
	<link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css" integrity="sha384-BVYiiSIFeK1dGmJRAkycuHAHRg32OmUcww7on3RYdg4Va+PmSTsz/K68vbdEjh4u" crossorigin="anonymous">
	
	<link rel="stylesheet" href="leaflet/Leaflet.awesome-markers/dist/leaflet.awesome-markers.css">
	<script src="leaflet/Leaflet.awesome-markers/dist/leaflet.awesome-markers.js"></script>

	<style type="text/css">
	.top {
		position: absolute;
		top: 0;
		left: 0;
	}
	.default {
		font-family: Verdana, Geneva, sans-serif;
	}
	.default-bold {
		font-family: Verdana, Geneva, sans-serif;
		font-weight: bold;
	}
	.default-group {
		font-family: Verdana, Geneva, sans-serif;
		font-weight: bold;
		font-size: 120%;
	}
	</style>
	</HEAD>
	<BODY>

	<div id="map"></div>
	<script>
[-
		$sth = $dbh->prepare(qq[SELECT AVG(`location_lat`) AS `location_lat`, AVG(`location_long`) AS `location_long` FROM meters WHERE `location_lat` IS NOT NULL AND `location_long` IS NOT NULL]);
		$sth->execute;			
-]
[$ if ($sth->rows) $]
[$ if ($d = $sth->fetchrow_hashref) $]
		var map = L.map('map').setView([ [+ $d->{location_lat} +], [+ $d->{location_long} +] ], 18);
		map.locate({setView: true, maxZoom: 16});
[$ endif $]
[$ endif $]

		// Creates a red marker with the coffee icon
		var onlineOpenMarker = L.AwesomeMarkers.icon({
			icon: 'circle',
			markerColor: 'green',
			prefix: 'fa',
			spin: false
		});
		var onlineCloseMarker = L.AwesomeMarkers.icon({
			icon: 'minus-circle',
			markerColor: 'green',
			prefix: 'fa',
			spin: false
		});
		var offlineMarker = L.AwesomeMarkers.icon({
			icon: 'exclamation-triangle',
			markerColor: 'red',
			prefix: 'fa',
			spin: false
		});
		var semiOfflineMarker = L.AwesomeMarkers.icon({
			icon: 'exclamation',
			markerColor: 'orange',
			prefix: 'fa',
			spin: false
		});

		L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {
			attribution: '&copy; <a href="https://www.openstreetmap.org/copyright">OpenStreetMap</a> contributors',
			detectRetina: true,
			maxZoom: 19,
			minZoom: 10
		}).addTo(map);
		
[- 
		# get all meters
		$sth = $dbh->prepare(qq[SELECT `location_lat`, `location_long`, `serial`, `info`, `last_updated`, `ssid`, `rssi`, `valve_status`, `ap_status`, `sw_version` FROM `meters` WHERE `location_lat` IS NOT NULL AND `location_long` IS NOT NULL]);
		$sth->execute;
-]
[$ if ($sth->rows) $]
	[$ while ($d = $sth->fetchrow_hashref) $]
				L.marker([ [+ $d->{location_lat} +], [+ $d->{location_long} +] ], 
					{
						icon: [$ if ($d->{last_updated} < time() - 3600) $]offlineMarker[$ elsif ($d->{last_updated} < time() - 1800) $]semiOfflineMarker[$ else $][$ if ($d->{valve_status} =~ /close/i) $]onlineCloseMarker[$ else $]onlineOpenMarker[$ endif $][$ endif $],
						riseOnHover: true
					})
				[$ if ($d->{last_updated} < time() - 1800) $]
					.setZIndexOffset(1000)
				[$ endif $]
					.addTo(map)
					.bindPopup('<div class="default-bold">[+ $d->{serial} +] [+ $d->{info} +]</div><div><b>Valve status: </b>[+ $d->{valve_status} +]<br><b>SSID: </b>[+ $d->{ssid} +]<br><b>RSSI: </b>[+ $d->{rssi} +]<br><b>AP status: </b>[+ $d->{ap_status} +]<br><b>Version: </b>[+ $d->{sw_version} +]<br><a href="/detail_acc.epl?serial=[+ $d->{serial} +]&low=1">Accummulated</a> | <a href="/detail.epl?serial=[+ $d->{serial} +]&low=1">Details</a></div>'
					);
	[$ endwhile $]
[$ endif $]
	</script>

	</BODY>
</HTML>
