#version: '3'

services:
  db:
    image: mariadb:10.5
    container_name: db
    ports:
      - "127.0.0.1:3306:3306"
    volumes:
      - ./my.cnf:/etc/mysql/my.cnf
      - ./db_data:/var/lib/mysql:delegated
      - ./nabovarme.sql:/nabovarme.sql
      - ./nabovarme_triggers.sql:/nabovarme_triggers.sql
      - ./nabovarme_setup.sh:/nabovarme_setup.sh
      - ./nabovarme_import.sh:/nabovarme_import.sh
      - ./nabovarme_triggers.sh:/nabovarme_triggers.sh
    restart: always
    healthcheck:
      test: ["CMD", "mysqladmin" ,"ping", "-h", "localhost"]
      timeout: 20s
      retries: 10
    environment:
      MYSQL_ROOT_PASSWORD: beu2pho4Ahkaeshu
      MYSQL_DATABASE: nabovarme
      MYSQL_USER: nabovarme
      MYSQL_PASSWORD: seesha9eisheM1mo
      TZ: 'Europe/Copenhagen'

  mqtt:
    image: eclipse-mosquitto:latest
    container_name: mqtt
    ports:
      - "1883:1883"
    depends_on:
      - meter_grapher
    volumes:
      - ./mosquitto.conf:/mosquitto/config/mosquitto.conf
      - ./mosquitto_data:/mosquitto/data
      - ./mosquitto_data/logs:/mosquitto/log
    restart: always
    environment:
      TZ: 'Europe/Copenhagen'

  web:
    build: '.'
    depends_on:
      - db
      - mqtt
    container_name: web
    volumes:
      - ./Nabovarme.conf:/etc/Nabovarme.conf
      - ./sms_spool:/var/www/nabovarme/sms_spool
    restart: always
    environment:
      METERLOGGER_DB_HOST: db:3306
      METERLOGGER_DB_USER: nabovarme
      METERLOGGER_DB_PASSWORD: seesha9eisheM1mo
      TZ: 'Europe/Copenhagen'

  ssl:
    build:
        context: '.'
        dockerfile: 'Dockerfile.ssl'
    container_name: ssl
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./certbot/etc:/etc/letsencrypt
      - ./certbot/var:/var/www/certbot
    depends_on:
      - web
    restart: always
    environment:
      TZ: 'Europe/Copenhagen'

  certbot:
    image: certbot/certbot
    volumes:
      - ./certbot/etc:/etc/letsencrypt
      - ./certbot/var:/var/www/certbot
    environment:
      TZ: 'Europe/Copenhagen'
    entrypoint: >
      sh -c "certbot certonly --webroot --webroot-path=/var/www/certbot --email hostmaster@skulp.net --agree-tos --no-eff-email -d meterlogger.net"

  meter_grapher:
    build:
        context: '.'
        dockerfile: 'Dockerfile.meter_grapher'
    depends_on:
      - db
      - redis
    container_name: meter_grapher
    volumes:
      - ./Nabovarme.conf:/etc/Nabovarme.conf
    restart: always
    environment:
      METERLOGGER_DB_HOST: db:3306
      METERLOGGER_DB_USER: nabovarme
      METERLOGGER_DB_PASSWORD: seesha9eisheM1mo
      TZ: 'Europe/Copenhagen'

  mysql_mqtt_command_queue_receive:
    build:
        context: '.'
        dockerfile: 'Dockerfile.mysql_mqtt_command_queue_receive'
    depends_on:
      - db
      - mqtt
    container_name: mysql_mqtt_command_queue_receive
    volumes:
      - ./Nabovarme.conf:/etc/Nabovarme.conf
    restart: always
    environment:
      METERLOGGER_DB_HOST: db:3306
      METERLOGGER_DB_USER: nabovarme
      METERLOGGER_DB_PASSWORD: seesha9eisheM1mo
      TZ: 'Europe/Copenhagen'

  mysql_mqtt_command_queue_send:
    build:
        context: '.'
        dockerfile: 'Dockerfile.mysql_mqtt_command_queue_send'
    depends_on:
      - db
      - mqtt
    container_name: mysql_mqtt_command_queue_send
    volumes:
      - ./Nabovarme.conf:/etc/Nabovarme.conf
    restart: always
    environment:
      METERLOGGER_DB_HOST: db:3306
      METERLOGGER_DB_USER: nabovarme
      METERLOGGER_DB_PASSWORD: seesha9eisheM1mo
      TZ: 'Europe/Copenhagen'

  smsd:
    build:
        context: '.'
        dockerfile: 'Dockerfile.smsd'
    container_name: smsd
    privileged: true
    volumes:
      - ./smstools_spool:/var/spool/sms
      - /dev/ttyUSB0:/dev/ttyUSB0
    restart: always
    environment:
      SMSD_HOST: ${SMSD_HOST}
      SMSD_PORT: ${SMSD_PORT}
      TZ: 'Europe/Copenhagen'

  meter_sms:
    build:
        context: '.'
        dockerfile: 'Dockerfile.meter_sms'
    depends_on:
      - db
      - mqtt
    container_name: meter_sms
    volumes:
      - ./Nabovarme.conf:/etc/Nabovarme.conf
#      - ./sms_spool:/var/www/nabovarme/sms_spool
#      - ./sms/outgoing:/var/spool/sms/outgoing
    restart: always
    environment:
      METERLOGGER_DB_HOST: db:3306
      METERLOGGER_DB_USER: nabovarme
      METERLOGGER_DB_PASSWORD: seesha9eisheM1mo
      TZ: 'Europe/Copenhagen'

  meter_cron:
    build:
        context: '.'
        dockerfile: 'Dockerfile.meter_cron'
    depends_on:
      - db
      - mqtt
    container_name: meter_cron
    volumes:
      - ./Nabovarme.conf:/etc/Nabovarme.conf
    restart: always
    environment:
      METERLOGGER_DB_HOST: db:3306
      METERLOGGER_DB_USER: nabovarme
      METERLOGGER_DB_PASSWORD: seesha9eisheM1mo
      TZ: 'Europe/Copenhagen'

  redis:
    image: redis:latest
    container_name: redis
    restart: always
    environment:
      TZ: 'Europe/Copenhagen'

  postfix:
    image: boky/postfix
    container_name: postfix
    ports:
      - "0.0.0.0:25:25"
    volumes:
      - ./postfix_custom_config:/docker-init.db/
    restart: always
    environment:
      HOSTNAME: meterlogger
      ALLOWED_SENDER_DOMAINS: meterlogger
      RELAYHOST: smsd
      TZ: 'Europe/Copenhagen'

  crowdsec-openresty:
    build:
      context: .
      dockerfile: Dockerfile.crowdsec-openresty
    container_name: crowdsec-openresty
    depends_on:
      - web
      - crowdsec
    volumes:
      - ./crowdsec-openresty/nginx.conf:/usr/local/openresty/nginx/conf/nginx.conf:ro
    environment:
      CROWDSEC_BOUNCER_API_KEY: "4XXy6NH920VTqxKrxASA9EzeaTg1NbLo6SCEh1OBWMo"
      CROWDSEC_LAPI_URL: http://crowdsec:8080
      TZ: Europe/Copenhagen

  crowdsec:
    image: crowdsecurity/crowdsec
    container_name: crowdsec
    volumes:
      - ./crowdsec-openresty/data:/etc/crowdsec/
    ports:
      - "8080:8080"
    environment:
      - TZ=Europe/Copenhagen

  utils:
    build:
        context: '.'
        dockerfile: 'Dockerfile.utils'
    container_name: utils
    volumes:
      - ./Nabovarme.conf:/etc/Nabovarme.conf
      - ./my.cnf:/etc/mysql/my.cnf
      - ./backup:/home/meterlogger/backup
    environment:
      METERLOGGER_DB_HOST: db
      MYSQL_ROOT_PASSWORD: beu2pho4Ahkaeshu
      TZ: 'Europe/Copenhagen'
